/* ==========================================================================
   #BACKGROUND GRADIENT GENERATORS
   ========================================================================== */

/**
  * Linear gradient generator. Takes the name of the "swatch" you pass
  * in and outputs the background-image with the correct start and
  * end gradient values.
  */

@include add-module(
  $name:    'tools.linear-gradient',
  $version: '1.0.0',
  $dependencies: (
    'settings.gradients': '1.0.0'
  )
);

@mixin linear-gradient($swatch, $important: '') {
  $gradient: map-get(map-get($gradients, gradients), $swatch);
  $start: map-get($gradient, 'start');
  $end: map-get($gradient, 'end');

  @if ($important == 'important') {
    background-image: linear-gradient(45deg, $start, $end) + unquote('!important');
  }
  @else {
    background-image: linear-gradient(45deg, $start, $end);
  }
}

@function get-linear-gradient($swatch) {
  $gradient: map-get(map-get($gradients, gradients), $swatch);
  $start: map-get($gradient, 'start');
  $end: map-get($gradient, 'end');

  @return linear-gradient(45deg, $start, $end);
}


@include add-module(
  $name:    'tools.radial-gradient',
  $version: '1.0.0',
  $dependencies: (
    'settings.gradients': '1.0.0'
  )
);

/**
  * Radial gradient generator. Identical in concept to the linear
  * gradient generator, but with radial-gradients instead.
  */
@mixin radial-gradient($swatch, $important: '') {
  $gradient: map-get($gradients, $swatch);
  $start: map-get($gradient, 'start');
  $end: map-get($gradient, 'end');

  @if ($important == 'important') {
    background-image: radial-gradient(circle, $start, $end) unquote('!important');
  }
  @else {
    background-image: radial-gradient(circle, $start, $end);
  }
}
